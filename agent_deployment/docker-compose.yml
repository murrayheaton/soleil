version: '3.8'

services:
  # Message Queue for Agent Communication
  rabbitmq:
    image: rabbitmq:3-management
    container_name: soleil-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: soleil
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-soleil123}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - soleil-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for Caching and Task Results
  redis:
    image: redis:7-alpine
    container_name: soleil-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - soleil-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Orchestrator Agent
  orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.orchestrator
    container_name: soleil-orchestrator
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_URL=amqp://soleil:${RABBITMQ_PASSWORD:-soleil123}@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
    volumes:
      - ./orchestrator.py:/app/orchestrator.py
      - ./config.json:/app/config.json
      - ./agent_contexts:/app/agent_contexts:ro
      - ./reports:/app/reports
      - ./metrics:/app/metrics
    depends_on:
      - rabbitmq
      - redis
    networks:
      - soleil-network
    restart: unless-stopped

  # Monitoring Dashboard
  monitoring:
    image: nginx:alpine
    container_name: soleil-monitoring
    ports:
      - "8080:80"
    volumes:
      - ./monitoring_dashboard.html:/usr/share/nginx/html/index.html:ro
      - ./monitoring_api.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - soleil-network
    restart: unless-stopped

  # Prometheus for Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: soleil-prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - soleil-network
    restart: unless-stopped

  # Grafana for Advanced Monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: soleil-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-dashboards:/etc/grafana/provisioning/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - soleil-network
    restart: unless-stopped

  # Agent Workers (can be scaled)
  agent-worker:
    build:
      context: .
      dockerfile: Dockerfile.agent
    deploy:
      replicas: 3
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_URL=amqp://soleil:${RABBITMQ_PASSWORD:-soleil123}@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379/0
      - WORKER_TYPE=general
    volumes:
      - ./agent_worker.py:/app/agent_worker.py
      - ./agent_contexts:/app/agent_contexts:ro
      - ./band-platform:/app/band-platform
    depends_on:
      - rabbitmq
      - redis
      - orchestrator
    networks:
      - soleil-network
    restart: unless-stopped

networks:
  soleil-network:
    driver: bridge

volumes:
  rabbitmq_data:
  redis_data:
  prometheus_data:
  grafana_data: